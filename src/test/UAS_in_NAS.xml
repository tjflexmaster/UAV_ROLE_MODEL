<team name="Basic UAS in NAS">
  <channels>
    <channel name="DATA_UAV_UAS" type="DATA" source="UAV" target="UAS"/>
    <channel name="VISUAL_UAV_UAVOP" type="VISUAL" source="UAV" target="UAVOP"/>
    <channel name="VISUAL_UAS_UAVOP" type="VISUAL" source="UAS" target="UAVOP"/>
    <channel name="AUDIO_UAS_UAVOP" type="AUDIO" source="UAS" target="UAVOP"/>
    <channel name="TACTILE_UAVOP_UAS" type="TACTILE" source="UAVOP" target="UAS"/>
    <channel name="DATA_UAS_UAV" type="DATA" source="UAS" target="UAV"/>
    <channel name="DATA_UAS_FAA" type="DATA" source="UAS" target="FAA"/>
    <channel name="DATA_FAA_UAS" type="DATA" source="FAA" target="UAS"/>
    <channel name="VISUAL_FAA_ATC" type="VISUAL" source="FAA" target="ATC"/>
    <channel name="TACTILE_ATC_FAA" type="TACTILE" source="ATC" target="FAA"/>
  
    <!-- Event Channels -->
    <channel name="NEW_MISSION" type="EVENT" source="" target="UAVOP" dataType="String"/>
  </channels>
  
  <!-- Model Actors -->
  <actors>
    <!-- ACTOR UAVOP   ////////////////////////////////////////////////////////////-->
    <actor name="UAVOP">
      <inputchannels>
        <channel>VISUAL_UAS_UAVOP</channel>
        <channel>AUDIO_UAS_UAVOP</channel>
        <channel>VISUAL_UAV_UAVOP</channel>
        <channel>NEW_MISSION</channel>
      </inputchannels>
      <outputchannels>
        <channel>TACTILE_UAVOP_UAS</channel>
      </outputchannels>
      
      <!-- Define actor memory -->
      <memory name="FAA_APPROVED" dataType="Boolean">false</memory>
      <memory name="FLIGHT_PLAN_READY" dataType="Boolean">false</memory>
      
      <!-- Start state -->
      <startState>IDLE</startState>
      
      <!-- States -->
      <states>
        <state name="IDLE">
          <!-- transitions -->
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Received new mission, begin building flight plan.</description>
            <inputs>
              <channel name="NEW_MISSION" predicate="eq">NEW_MISSION</channel>
              <memory name="FLIGHT_PLAN_READY" predicate="eq">false</memory>
            </inputs>
            <outputs>
            </outputs>
            <endState>BUILD_FP</endState>
          </transition>
        </state>
        
        <state name="BUILD_FP">
          <!-- transitions -->
          <transition durationMin="900" durationMax="1200" priority="10">
            <description>Build a flight plan</description>
            <inputs>
              <memory name="FLIGHT_PLAN_READY" predicate="eq">false</memory>
            </inputs>
            <outputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="MOUSE" dataType="String">FLIGHT_PLAN</layer>
                <layer name="KEYBOARD" dataType="String">FLIGHT_PLAN</layer>
              </channel>
              <memory name="FLIGHT_PLAN_READY" dataType="Boolean">true</memory>
            </outputs>
            <endState>BUILD_FP</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Click the Send flight plan button</description>
            <inputs>
              <memory name="FLIGHT_PLAN_READY" predicate="eq">true</memory>
              <memory name="FAA_APPROVED" predicate="eq">false</memory>
            </inputs>
            <outputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="MOUSE" dataType="String">SEND_FLIGHT_PLAN</layer>
              </channel>
            </outputs>
            <endState>END_BUILD_FP</endState>
          </transition>
        </state>
        
        <state name="END_BUILD_FP">
          <transition durationMin="1" durationMax="1" priority="1">
            <description>Clear mouse and keyboard output layers</description>
            <inputs>
            </inputs>
            <outputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="MOUSE"><null/></layer>
                <layer name="KEYBOARD"><null/></layer>
              </channel>
            </outputs>
            <endState>WAITING_ON_FAA</endState>
          </transition>
        </state>
        
        <state name="WAITING_ON_FAA">
          
          <transition durationMin="30" durationMax="60" priority="10">
            <description>FAA approved the flight</description>
            <inputs>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="FLIGHT_PLAN" predicate="eq">FLIGHT_PLAN_APPROVED</layer>
              </channel>
            </inputs>
            <outputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="MOUSE">TAKEOFF</layer>
              </channel>
              <memory name="FAA_APPROVED" dataType="Boolean">true</memory>
            </outputs>
            <endState>END_WAITING_ON_FAA</endState>
          </transition>
          
        </state>
        
        <state name="END_WAITING_ON_FAA">
          <transition durationMin="1" durationMax="1" priority="1">
            <description>Clear user output</description>
            <inputs>
            </inputs>
            <outputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="MOUSE"><null/></layer>
              </channel>
            </outputs>
            <endState>MONITOR_TAKEOFF</endState>
          </transition>
        </state>
        
        <state name="MONITOR_TAKEOFF">
          <transition durationMin="1" durationMax="1" priority="1">
            <description>UAV is airborne, move to monitor GUI</description>
            <inputs>
              <channel name="VISUAL_UAV_UAVOP" predicate="eq">FLYING</channel>
            </inputs>
            <outputs>
            </outputs>
            <endState>MONITOR_UAVGUI</endState>
          </transition>
        </state>
        
        <state name="MONITOR_UAVGUI">
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Operator sees that the UAV is beginning the landing approach</description>
            <inputs>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="UAV" predicate="eq">LANDING</layer>
              </channel>
            </inputs>
            <outputs>
              
            </outputs>
            <endState>MONITOR_LANDING</endState>
          </transition>
        </state>
        
        <state name="MONITOR_LANDING">
          <transition durationMin="30" durationMax="60" priority="10">
            <description>Operator sees that the UAV has landed and sets the mission to complete.</description>
            <inputs>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="UAV" predicate="eq">GROUNDED</layer>
              </channel>
            </inputs>
            <outputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="KEYBOARD">MISSION_COMPLETE</layer>
                <layer name="MOUSE">MISSION_COMPLETE</layer>
              </channel>
            </outputs>
            <endState>IDLE</endState>
          </transition>
        </state>
      </states>
    </actor>
    
    
    <!-- Actor UAS ///////////////////////////////////////////////////////////-->
    <actor name="UAS">
      <inputchannels>
        <channel>TACTILE_UAVOP_UAS</channel>
        <channel>DATA_FAA_UAS</channel>
        <channel>DATA_UAV_UAS</channel>
      </inputchannels>
      <outputchannels>
        <channel>VISUAL_UAS_UAVOP</channel>
        <channel>AUDIO_UAS_UAVOP</channel>
        <channel>DATA_UAS_FAA</channel>
        <channel>DATA_UAS_UAV</channel>
      </outputchannels>
      
      <!-- Define actor memory -->
      <memory name="FLIGHT_PLAN" dataType="String">NONE</memory>     
      <memory name="UAV" dataType="String">NONE</memory>
      
      <!-- Start state -->
      <startState>NORMAL</startState>
      
      <!-- States -->
      <states>
        <state name="NORMAL">
          <!-- transitions -->
          <!-- START UAVOp Input transitions -->
          <transition durationMin="1" durationMax="1" priority="1">
            <description>Send flight plan to FAA</description>
            <inputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="MOUSE" predicate="eq">SEND_FLIGHT_PLAN</layer>
              </channel>
            </inputs>
            <outputs>
              <memory name="FLIGHT_PLAN">SEND_FLIGHT_PLAN</memory>
              <channel name="DATA_UAS_FAA">
                <layer name="FLIGHT_PLAN">SEND_FLIGHT_PLAN</layer>
              </channel>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="FLIGHT_PLAN"><memory name="FLIGHT_PLAN"/></layer>
                <layer name="UAV"><memory name="UAV"/></layer>
                <!-- Send all state data to the UAVOP through this channel -->
              </channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
 
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAVOP sent take off command</description>
            <inputs>
              <channel name="TACTILE_UAVOP_UAS">
                <layer name="MOUSE" predicate="eq">TAKEOFF</layer>
              </channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAS_UAV">TAKEOFF</channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
          <!-- END UAVOP input TRANSITIONS -->
          
          <!-- START FAA input TRANSITIONS -->
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Received flight plan approved from FAA</description>
            <inputs>
              <channel name="DATA_FAA_UAS">
                <layer name="FLIGHT_PLAN_RESPONSE" predicate="eq">FLIGHT_PLAN_APPROVED</layer>
              </channel>
            </inputs>
            <outputs>
              <channel name="DATA_FAA_UAS">
                <layer name="FLIGHT_PLAN_RESPONSE"><null/></layer>
              </channel>
              <memory name="FLIGHT_PLAN">FLIGHT_PLAN_APPROVED</memory>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="FLIGHT_PLAN"><memory name="FLIGHT_PLAN"/></layer>
                <layer name="UAV"><memory name="UAV"/></layer>
                <!-- Send all state data to the UAVOP through this channel -->
              </channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
          <!-- END FAA input TRANSITIONS -->         
                     
          <!--  START UAV STATE TRANSITIONS -->
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV has started to takeoff, show this to the UAVOp</description>
            <inputs>
              <memory name="UAV" predicate="ne">TAKEOFF</memory>
              <channel name="DATA_UAV_UAS" predicate="eq">TAKEOFF</channel>
            </inputs>
            <outputs>
              <memory name="UAV">TAKEOFF</memory>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="FLIGHT_PLAN"><memory name="FLIGHT_PLAN"/></layer>
                <layer name="UAV"><memory name="UAV"/></layer>
                <!-- Send all state data to the UAVOP through this channel -->
              </channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV has started to fly, show this to the UAVOp</description>
            <inputs>
              <memory name="UAV" predicate="ne">FLYING</memory>
              <channel name="DATA_UAV_UAS" predicate="eq">FLYING</channel>
            </inputs>
            <outputs>
              <memory name="UAV">FLYING</memory>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="FLIGHT_PLAN"><memory name="FLIGHT_PLAN"/></layer>
                <layer name="UAV"><memory name="UAV"/></layer>
                <!-- Send all state data to the UAVOP through this channel -->
              </channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV has started to land, show this to the UAVOp</description>
            <inputs>
              <memory name="UAV" predicate="ne">LANDING</memory>
              <channel name="DATA_UAV_UAS" predicate="eq">LANDING</channel>
            </inputs>
            <outputs>
              <memory name="UAV">LANDING</memory>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="FLIGHT_PLAN"><memory name="FLIGHT_PLAN"/></layer>
                <layer name="UAV"><memory name="UAV"/></layer>
                <!-- Send all state data to the UAVOP through this channel -->
              </channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV has started to land, show this to the UAVOp</description>
            <inputs>
              <memory name="UAV" predicate="ne">GROUNDED</memory>
              <channel name="DATA_UAV_UAS" predicate="eq">GROUNDED</channel>
            </inputs>
            <outputs>
              <memory name="UAV">GROUNDED</memory>
              <channel name="VISUAL_UAS_UAVOP">
                <layer name="FLIGHT_PLAN"><memory name="FLIGHT_PLAN"/></layer>
                <layer name="UAV"><memory name="UAV"/></layer>
                <!-- Send all state data to the UAVOP through this channel -->
              </channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
          <!--  END UAV STATE TRANSITIONS -->
          
 
          <!--
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Change to Alert mode for NOTAM on the flight plan</description>
            <inputs>
              <channel name="DATA_UAS_UAVGUI" predicate="eq">NOTAM_ON_FLIGHT_PLAN</channel>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAVGUI_UAVOP">NOTAM_ON_FLIGHT_PLAN</channel>
              <memory name="NOTAM_ON_FLIGHT_PLAN">true</memory>
            </outputs>
            <endState>ALERT</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Change to Alert mode for avoiding a NOTAM</description>
            <inputs>
              <channel name="DATA_UAS_UAVGUI" predicate="eq">AVOIDING_NOTAM</channel>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAVGUI_UAVOP">AVOIDING_NOTAM</channel>
              <memory name="AVOIDING_NOTAM">true</memory>
            </outputs>
            <endState>ALERT</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Change to Alert mode</description>
            <inputs>
              <channel name="DATA_UAS_UAVGUI" predicate="eq">AVOIDING_COLLISION</channel>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAVGUI_UAVOP">AVOIDING_COLLISION</channel>
              <memory name="AVOIDING_COLLISION">true</memory>
            </outputs>
            <endState>ALERT</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Change to Alert mode</description>
            <inputs>
              <channel name="DATA_UAS_UAVGUI" predicate="eq">POSSIBLE_COLLISION</channel>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAVGUI_UAVOP">POSSIBLE_COLLISION</channel>
              <memory name="POSSIBLE_COLLISION">true</memory>
            </outputs>
            <endState>ALERT</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Change to Manual Fly mode</description>
            <inputs>
              <channel name="TACTILE_UAVOP_UAVGUI" predicate="eq">FLY_MANUAL</channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAVGUI_UAS">FLY_MANUAL</channel>
            </outputs>
            <endState>MANUAL_FLIGHT</endState>
          </transition>
          
        -->
        </state>
        
        <state name="ALERT">
          <!-- transitions -->
          
        </state>
      </states>
    </actor>
    
    <!-- Actor UAV //////////////////////////////////////////////////////-->
    <actor name="UAV">
      <inputchannels>
        <channel>DATA_UAS_UAV</channel>
      </inputchannels>
      <outputchannels>
        <channel>DATA_UAV_UAS</channel>
        <channel>VISUAL_UAV_UAVOP</channel>
      </outputchannels>
      
      <!-- Define actor memory -->
      
      <!-- Start state -->
      <startState>GROUNDED</startState>
      
      <!-- States -->
      <states>
        <state name="GROUNDED">
          <!-- transitions -->
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Move to takeoff from UAVGUI cmd</description>
            <inputs>
              <channel name="DATA_UAS_UAV" predicate="eq">TAKEOFF</channel>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAV_UAVOP">TAKEOFF</channel>
              <channel name="DATA_UAV_UAS">TAKEOFF</channel>
              <channel name="DATA_UAS_UAV"><null/></channel>
            </outputs>
            <endState>TAKEOFF</endState>
          </transition>
        </state>
        
        <state name="TAKEOFF">
          <!-- transitions -->
          <transition durationMin="300" durationMax="600" priority="10">
            <description>Automatic Transition to Flying</description>
            <inputs>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAV_UAVOP">FLYING</channel>
              <channel name="DATA_UAV_UAS">FLYING</channel>
            </outputs>
            <endState>FLYING</endState>
          </transition>
        </state>
        
        <state name="FLYING">
          <!-- transitions -->
          <transition durationMin="10000" durationMax="20000" priority="1">
            <description>UAV normal flight</description>
            <inputs>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAV_UAVOP">LANDING</channel>
              <channel name="DATA_UAV_UAS">LANDING</channel>
            </outputs>
            <endState>LANDING</endState>
          </transition>
          
          <!--
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV gets a command to avoid a NOTAM</description>
            <inputs>
              <channel name="DATA_UAS_UAV" predicate="eq">AVOID_NOTAM</channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">AVOIDING_NOTAM</channel>
            </outputs>
            <endState>AVOID_NOTAM</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV gets a command to avoid a collision</description>
            <inputs>
              <channel name="DATA_UAS_UAV" predicate="eq">AVOID_COLLISION</channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">AVOIDING_COLLISION</channel>
            </outputs>
            <endState>AVOID_COLLISION</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV gets a manual flight mode cmd</description>
            <inputs>
              <channel name="DATA_UAS_UAV" predicate="eq">FLY_MANUAL</channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">FLYING_MANUAL</channel>
            </outputs>
            <endState>FLYING_MANUAL</endState>
          </transition>
          -->
        </state>
        
        <state name="AVOID_NOTAM">
          <!-- transitions -->
          <transition durationMin="300" durationMax="600" priority="10">
            <description>Avoid the NOTAM</description>
            <inputs>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">LOITER</channel>
            </outputs>
            <endState>LOITER</endState>
          </transition>
          
          <transition durationMin="1" durationMax="1" priority="10">
            <description>UAV gets a command to avoid a collision</description>
            <inputs>
              <channel name="DATA_UAS_UAV" predicate="eq">AVOID_COLLISION</channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">AVOIDING_COLLISION</channel>
            </outputs>
            <endState>AVOID_COLLISION</endState>
          </transition>
        </state>
        
        <state name="AVOID_COLLISION">
          <!-- transitions -->
          <transition durationMin="300" durationMax="600" priority="10">
            <description>Avoid the collision</description>
            <inputs>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">FLYING</channel>
            </outputs>
            <endState>FLYING</endState>
          </transition>
        </state>
        
        <state name="LOITER">
          <!-- transitions -->
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Resume a normal flight</description>
            <inputs>
              <channel name="DATA_UAS_UAV" predicate="eq">RESUME_FLIGHT</channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">FLYING</channel>
            </outputs>
            <endState>FLYING</endState>
          </transition>
        </state>
        
        <!--
        <state name="FLYING_MANUAL">
          <transition durationMin="1" durationMax="1" priority="10">
            <description>Resume a normal flight</description>
            <inputs>
              <channel name="DATA_UAS_UAV" predicate="eq">RESUME_FLIGHT</channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAV_UAS">FLYING</channel>
            </outputs>
            <endState>FLYING</endState>
          </transition>
        </state>
        -->
        
        <state name="LANDING">
          <!-- transitions -->
          <transition durationMin="600" durationMax="900" priority="10">
            <description>Land the UAV</description>
            <inputs>
            </inputs>
            <outputs>
              <channel name="VISUAL_UAV_UAVOP">GROUNDED</channel>
              <channel name="DATA_UAV_UAS">GROUNDED</channel>
            </outputs>
            <endState>GROUNDED</endState>
          </transition>
        </state>
      </states>
    </actor>
    
    <!-- Actor FAA ///////////////////////////////////////////////////////////-->
    <actor name="FAA">
      <inputchannels>
        <channel>DATA_UAS_FAA</channel>
        <channel>TACTILE_ATC_FAA</channel>
      </inputchannels>
      <outputchannels>
        <channel>DATA_FAA_UAS</channel>
        <channel>VISUAL_FAA_ATC</channel>
      </outputchannels>
      
      <!-- Define actor memory -->
      <!-- none -->
      
      <!-- Start state -->
      <startState>NORMAL</startState>
      
      <!-- States -->
      <states>
        <state name="NORMAL">
          <!-- transitions -->
          <transition durationMin="5" durationMax="10" priority="10">
            <description>Received Flight plan from UAS</description>
            <inputs>
              <channel name="DATA_UAS_FAA">
                <layer name="FLIGHT_PLAN" predicate="eq">SEND_FLIGHT_PLAN</layer>
              </channel>
            </inputs>
            <outputs>
              <channel name="DATA_UAS_FAA">
                <layer name="FLIGHT_PLAN"><null/></layer>
              </channel>
              <channel name="DATA_FAA_UAS">
                <layer name="FLIGHT_PLAN_RESPONSE">FLIGHT_PLAN_APPROVED</layer>
              </channel>
            </outputs>
            <endState>NORMAL</endState>
          </transition>
        </state>
        
        <!--
        <state name="TEST">
          <transition durationMin="1" durationMax="1" priority="10">
            <description>TEST</description>
            <inputs>
              <channel name="" predicate="eq">TEST</channel>
            </inputs>
            <outputs>
              <channel name="">TEST</channel>
            </outputs>
            <endState>TEST</endState>
          </transition>
        </state>
        -->     
      </states>
    </actor>
    
    <actor name="ATC">
      <inputchannels>
        <channel>VISUAL_FAA_ATC</channel>
      </inputchannels>
      <outputchannels>
        <channel>TACTILE_ATC_FAA</channel>
      </outputchannels>
      
      <!-- Define actor memory -->
      <!-- none -->
      
      <!-- Start state -->
      <startState>TEST</startState>
      
      <!-- States -->
      <states>
        <state name="TEST">
          <!-- transitions -->
          <!--
          <transition durationMin="1" durationMax="1" priority="10">
            <description>TEST</description>
            <inputs>
              <channel name="" predicate="eq">TEST</channel>
            </inputs>
            <outputs>
              <channel name="">TEST</channel>
            </outputs>
            <endState>TEST</endState>
          </transition>
          -->
        </state>
        
        <!--
        <state name="TEST">
          <transition durationMin="1" durationMax="1" priority="10">
            <description>TEST</description>
            <inputs>
              <channel name="" predicate="eq">TEST</channel>
            </inputs>
            <outputs>
              <channel name="">TEST</channel>
            </outputs>
            <endState>TEST</endState>
          </transition>
        </state>
        -->
      </states>
    </actor>
  </actors>
  
  <!-- System Events -->
  <events>
    <event name="NEW_MISSION" count="1">
      <transition>
        <description> Start a new UAV mission</description>
        <inputs>
        </inputs>
        <outputs>
          <channel name="NEW_MISSION">NEW_MISSION</channel>
        </outputs>
      </transition>
    </event>
  </events>
</team>

